plugins {
    id 'org.springframework.boot' version '2.4.1'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    apply plugin: "com.moowork.node"
}

group = 'com.bkjeon'
version = '0.0.0'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    classpath('com.moowork.gradle:gradle-node-plugin:1.3.1')
}

test {
    useJUnitPlatform()
}

// node environment
def clientPath = projectDir.toString() + '/../frontend_antd'
def sourceDir = "${clientPath}/build/client"
def targetDir = "src/main/resources/public"
node {
    println "CLIENT PROJECT PATH : ${clientPath}"
    nodeModulesDir = file(clientPath)
}

task antdBuild(type: YarnTask) {
    group = 'Build'

    if (System.getenv("NODE_ENV") != null && System.getenv("NODE_ENV").equals("test")) {
        args = ['test-build']
    } else {
        args = ['build']
    }
}

task deleteStatic() {
    group = 'Build'
    delete targetDir
}

// copy client /build to server /out
task copyStatic(type: Copy) {
    group = 'Build'
    dependsOn deleteStatic
    from sourceDir
    into targetDir
}

// build with client
task buildWithClient() {
    group = 'Build'
    yarnBuild.finalizedBy copyStatic
    copyStatic.finalizedBy bootJar

    dependsOn clean
    dependsOn yarnBuild
}
